[
    {
        "label": "entidad",
        "importPath": "entidades.entidad",
        "description": "entidades.entidad",
        "isExtraImport": true,
        "detail": "entidades.entidad",
        "documentation": {}
    },
    {
        "label": "getenv",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "psycopg2",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "psycopg2",
        "description": "psycopg2",
        "detail": "psycopg2",
        "documentation": {}
    },
    {
        "label": "Faker",
        "importPath": "faker",
        "description": "faker",
        "isExtraImport": true,
        "detail": "faker",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "valores",
        "description": "valores",
        "isExtraImport": true,
        "detail": "valores",
        "documentation": {}
    },
    {
        "label": "persona_natural",
        "importPath": "entidades.persona_natural",
        "description": "entidades.persona_natural",
        "isExtraImport": true,
        "detail": "entidades.persona_natural",
        "documentation": {}
    },
    {
        "label": "entidad",
        "kind": 2,
        "importPath": "entidades.entidad",
        "description": "entidades.entidad",
        "peekOfCode": "def entidad(cursor,nombre,cod_comuna)-> int | None:\n  cursor.execute(f\"INSERT INTO entidad (nombre,cod_comuna) VALUES (%s,%s) RETURNING id_entidad\",(nombre,cod_comuna))\n  result = cursor.fetchone()\n  return result[0] if result else None",
        "detail": "entidades.entidad",
        "documentation": {}
    },
    {
        "label": "persona_natural",
        "kind": 2,
        "importPath": "entidades.persona_natural",
        "description": "entidades.persona_natural",
        "peekOfCode": "def persona_natural(\n    cursor,\n    cod_comuna,\n    rut,\n    nombre_elemento,\n    nombre,\n    sexo,\n    fecha_nacimiento,\n    direccion,\n    nombre_pueblo_ori,",
        "detail": "entidades.persona_natural",
        "documentation": {}
    },
    {
        "label": "random_run",
        "kind": 2,
        "importPath": "generar_datos",
        "description": "generar_datos",
        "peekOfCode": "def random_run(fake: Faker) -> int:\n    return fake.unique.random_int(*rango_rut_valido)\ndef random_cod_comuna(fake: Faker) -> int:\n    return fake.random_int(*rango_cod_comuna)\ndef random_nombre_elemento(fake: Faker) -> str:\n    return fake.random_element(valores_nombre_elemento_patrimonio_inmaterial)\ndef random_sexo(fake: Faker) -> str:\n    return fake.random_element(tipo_sexo)\ndef random_pueblo_originario(fake: Faker) -> str | None:\n    return fake.random_element(tipo_pueblo_originario)",
        "detail": "generar_datos",
        "documentation": {}
    },
    {
        "label": "random_cod_comuna",
        "kind": 2,
        "importPath": "generar_datos",
        "description": "generar_datos",
        "peekOfCode": "def random_cod_comuna(fake: Faker) -> int:\n    return fake.random_int(*rango_cod_comuna)\ndef random_nombre_elemento(fake: Faker) -> str:\n    return fake.random_element(valores_nombre_elemento_patrimonio_inmaterial)\ndef random_sexo(fake: Faker) -> str:\n    return fake.random_element(tipo_sexo)\ndef random_pueblo_originario(fake: Faker) -> str | None:\n    return fake.random_element(tipo_pueblo_originario)\nif __name__ == \"__main__\":\n    load_dotenv()",
        "detail": "generar_datos",
        "documentation": {}
    },
    {
        "label": "random_nombre_elemento",
        "kind": 2,
        "importPath": "generar_datos",
        "description": "generar_datos",
        "peekOfCode": "def random_nombre_elemento(fake: Faker) -> str:\n    return fake.random_element(valores_nombre_elemento_patrimonio_inmaterial)\ndef random_sexo(fake: Faker) -> str:\n    return fake.random_element(tipo_sexo)\ndef random_pueblo_originario(fake: Faker) -> str | None:\n    return fake.random_element(tipo_pueblo_originario)\nif __name__ == \"__main__\":\n    load_dotenv()\n    database = getenv(\"DATABASE_NAME\") or \"postgres\"\n    user = getenv(\"DATABASE_USER\") or \"postgres\"",
        "detail": "generar_datos",
        "documentation": {}
    },
    {
        "label": "random_sexo",
        "kind": 2,
        "importPath": "generar_datos",
        "description": "generar_datos",
        "peekOfCode": "def random_sexo(fake: Faker) -> str:\n    return fake.random_element(tipo_sexo)\ndef random_pueblo_originario(fake: Faker) -> str | None:\n    return fake.random_element(tipo_pueblo_originario)\nif __name__ == \"__main__\":\n    load_dotenv()\n    database = getenv(\"DATABASE_NAME\") or \"postgres\"\n    user = getenv(\"DATABASE_USER\") or \"postgres\"\n    host = getenv(\"DATABASE_HOST\") or \"localhost\"\n    port = getenv(\"DATABASE_PORT\") or \"5432\"",
        "detail": "generar_datos",
        "documentation": {}
    },
    {
        "label": "random_pueblo_originario",
        "kind": 2,
        "importPath": "generar_datos",
        "description": "generar_datos",
        "peekOfCode": "def random_pueblo_originario(fake: Faker) -> str | None:\n    return fake.random_element(tipo_pueblo_originario)\nif __name__ == \"__main__\":\n    load_dotenv()\n    database = getenv(\"DATABASE_NAME\") or \"postgres\"\n    user = getenv(\"DATABASE_USER\") or \"postgres\"\n    host = getenv(\"DATABASE_HOST\") or \"localhost\"\n    port = getenv(\"DATABASE_PORT\") or \"5432\"\n    fake = Faker()\n    conn = psycopg2.connect(database=database, user=user, host=host, port=port)",
        "detail": "generar_datos",
        "documentation": {}
    },
    {
        "label": "rango_cod_comuna",
        "kind": 5,
        "importPath": "valores",
        "description": "valores",
        "peekOfCode": "rango_cod_comuna = (347, 692)\nrango_rut_valido = (10000000, 99999999)\ntipo_modalidad_actividad = (\"presencial\", \"virtual\", \"ambas\")\ntipo_sexo = (\"mujer\", \"hombre\")\ntipo_disciplina_artesano = (\n    \"alfareria y ceramica\",\n    \"cesteria\",\n    \"canteria y piedras\",\n    \"huesos-cuernos-conchas\",\n    \"instrumentos musicales y luthier\",",
        "detail": "valores",
        "documentation": {}
    },
    {
        "label": "rango_rut_valido",
        "kind": 5,
        "importPath": "valores",
        "description": "valores",
        "peekOfCode": "rango_rut_valido = (10000000, 99999999)\ntipo_modalidad_actividad = (\"presencial\", \"virtual\", \"ambas\")\ntipo_sexo = (\"mujer\", \"hombre\")\ntipo_disciplina_artesano = (\n    \"alfareria y ceramica\",\n    \"cesteria\",\n    \"canteria y piedras\",\n    \"huesos-cuernos-conchas\",\n    \"instrumentos musicales y luthier\",\n    \"madera\",",
        "detail": "valores",
        "documentation": {}
    },
    {
        "label": "tipo_modalidad_actividad",
        "kind": 5,
        "importPath": "valores",
        "description": "valores",
        "peekOfCode": "tipo_modalidad_actividad = (\"presencial\", \"virtual\", \"ambas\")\ntipo_sexo = (\"mujer\", \"hombre\")\ntipo_disciplina_artesano = (\n    \"alfareria y ceramica\",\n    \"cesteria\",\n    \"canteria y piedras\",\n    \"huesos-cuernos-conchas\",\n    \"instrumentos musicales y luthier\",\n    \"madera\",\n    \"marroquineria y talabarteria (cueros)\",",
        "detail": "valores",
        "documentation": {}
    },
    {
        "label": "tipo_sexo",
        "kind": 5,
        "importPath": "valores",
        "description": "valores",
        "peekOfCode": "tipo_sexo = (\"mujer\", \"hombre\")\ntipo_disciplina_artesano = (\n    \"alfareria y ceramica\",\n    \"cesteria\",\n    \"canteria y piedras\",\n    \"huesos-cuernos-conchas\",\n    \"instrumentos musicales y luthier\",\n    \"madera\",\n    \"marroquineria y talabarteria (cueros)\",\n    \"metales y orfebreria\",",
        "detail": "valores",
        "documentation": {}
    },
    {
        "label": "tipo_disciplina_artesano",
        "kind": 5,
        "importPath": "valores",
        "description": "valores",
        "peekOfCode": "tipo_disciplina_artesano = (\n    \"alfareria y ceramica\",\n    \"cesteria\",\n    \"canteria y piedras\",\n    \"huesos-cuernos-conchas\",\n    \"instrumentos musicales y luthier\",\n    \"madera\",\n    \"marroquineria y talabarteria (cueros)\",\n    \"metales y orfebreria\",\n    \"papel\",",
        "detail": "valores",
        "documentation": {}
    },
    {
        "label": "tipo_vinculo",
        "kind": 5,
        "importPath": "valores",
        "description": "valores",
        "peekOfCode": "tipo_vinculo = (\"temporal\", \"contratado\", \"voluntario\")\ntipo_mon_nac = (\n    \"monumento historico mueble\",\n    \"monumento historico inmueble\",\n    \"santuario de la naturaleza\",\n    \"zona tipica\",\n)\ntipo_pat_natural = (\"Monumento natural\", \"parque nacional\", \"reserva nacional\")\ntipo_nivel_educacional = (\"basica\", \"media\")\ntipo_pueblo_originario = [",
        "detail": "valores",
        "documentation": {}
    },
    {
        "label": "tipo_mon_nac",
        "kind": 5,
        "importPath": "valores",
        "description": "valores",
        "peekOfCode": "tipo_mon_nac = (\n    \"monumento historico mueble\",\n    \"monumento historico inmueble\",\n    \"santuario de la naturaleza\",\n    \"zona tipica\",\n)\ntipo_pat_natural = (\"Monumento natural\", \"parque nacional\", \"reserva nacional\")\ntipo_nivel_educacional = (\"basica\", \"media\")\ntipo_pueblo_originario = [\n    \"Mapuche\",",
        "detail": "valores",
        "documentation": {}
    },
    {
        "label": "tipo_pat_natural",
        "kind": 5,
        "importPath": "valores",
        "description": "valores",
        "peekOfCode": "tipo_pat_natural = (\"Monumento natural\", \"parque nacional\", \"reserva nacional\")\ntipo_nivel_educacional = (\"basica\", \"media\")\ntipo_pueblo_originario = [\n    \"Mapuche\",\n    \"Aymara\",\n    \"Rapa Nui\",\n    \"Atacamenos\",\n    \"Quechua\",\n    \"Colla\",\n    \"Chango\",",
        "detail": "valores",
        "documentation": {}
    },
    {
        "label": "tipo_nivel_educacional",
        "kind": 5,
        "importPath": "valores",
        "description": "valores",
        "peekOfCode": "tipo_nivel_educacional = (\"basica\", \"media\")\ntipo_pueblo_originario = [\n    \"Mapuche\",\n    \"Aymara\",\n    \"Rapa Nui\",\n    \"Atacamenos\",\n    \"Quechua\",\n    \"Colla\",\n    \"Chango\",\n    \"Diaguita\",",
        "detail": "valores",
        "documentation": {}
    },
    {
        "label": "tipo_pueblo_originario",
        "kind": 5,
        "importPath": "valores",
        "description": "valores",
        "peekOfCode": "tipo_pueblo_originario = [\n    \"Mapuche\",\n    \"Aymara\",\n    \"Rapa Nui\",\n    \"Atacamenos\",\n    \"Quechua\",\n    \"Colla\",\n    \"Chango\",\n    \"Diaguita\",\n    \"Kawesqar\",",
        "detail": "valores",
        "documentation": {}
    },
    {
        "label": "valores_ambito_patrimonio",
        "kind": 5,
        "importPath": "valores",
        "description": "valores",
        "peekOfCode": "valores_ambito_patrimonio = [\n    \"Artes del espectáculo\",\n    \"Conocimientos y usos relacionados con la naturaleza y el universo\",\n    \"Técnicas Artesanales tradicionales\",\n    \"Tradiciones y Expresiones Orales\",\n    \"Usos sociales, rituales y actos festivos\",\n]\nvalores_nombre_elemento_patrimonio_inmaterial = [\n    \"Baile de morenos de paso en la región de Arica y Parinacota\",\n    \"Tradición de las Cruces de Mayo afrodescendientes en los valles de Azapa, Lluta y Acha\",",
        "detail": "valores",
        "documentation": {}
    },
    {
        "label": "valores_nombre_elemento_patrimonio_inmaterial",
        "kind": 5,
        "importPath": "valores",
        "description": "valores",
        "peekOfCode": "valores_nombre_elemento_patrimonio_inmaterial = [\n    \"Baile de morenos de paso en la región de Arica y Parinacota\",\n    \"Tradición de las Cruces de Mayo afrodescendientes en los valles de Azapa, Lluta y Acha\",\n    \"Baile de morenos de paso en la región de Arica y Parinacota\",\n    \"Bailes chinos\",\n    \"Danza cachimbo de las comunas de Pica, Huara y Pozo Almonte\",\n    \"Baile de morenos de paso en la región de Arica y Parinacota\",\n    \"Bailes chinos\",\n    \"Bailes Devocionales de la Oficina Salitrera Pedro de Valdivia\",\n    \"Bailes tradicionales de San Pedro de Atacama\",",
        "detail": "valores",
        "documentation": {}
    }
]